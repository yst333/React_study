※ URL 쿼리 스트링

이번에는 About 페이지에서 쿼리 스트링을 받아 오겠습니다.
쿼리 스트링은 location 객체에 들어 있는 search 값에서 조회할 수 있습니다.
location 객체는 라우트로 사용된 컴포넌트에게 props로 전달되며,
웹 애플리케이션의 현재 주소에 대한 정보를 지니고 있습니다.
location의 형태는 다음과 같습니다.
{
  "pathname": "/about",
  "search": "?detail=true",
  "hash": ""
}

위 location 객체는 http://localhost:3000/about?detail=true 주소로
들어갔을 때의 값입니다. URL 쿼리를 읽을 때는 위 객체가 지닌 값 중에서
search 값을 확인해야 합니다. 이 값은 문자열 형태로 되어 있습니다.
URL 쿼리는 ?detail=true&another=1과 같이 문자열에 여러 가지 값을
설정해 줄 수 있습니다. search 값에서 특정 값을 읽어 오기 위해서는
이 문자열을 객체 형태로 변환해 주어야 합니다.

쿼리 문자열을 객체로 변환할 때는 qs라는 라이브러리를 사용합니다.
npm을 사용하여 해당 라이브러리를 설치해 줍니다.

C:\reactstart\router_example>npm install qs
또는 C:\reactstart\router_example>yarn add qs


그러면 이제 About 컴포넌트에서 location.search 값에 있는 detail이
true인지 아닌지에 따라 추가 정보를 보여 주도록 만들겠습니다.
About 컴포넌트를 다음과 같이 코딩해 줍니다.

* src 폴더 안에 About.js 소스 수정 코딩
[src\About.js 소스 수정 코딩]

import React from 'react';
import qs from 'qs';

const About = ({ location }) => {
  // 쿼리 문자열을 객체로 변환할 때는 qs 라이브러리를 사용합니다.
  const query = qs.parse(location.search, {
    ignoreQueryPrefix: true // 이 설정을 통하여 ignoreQueryPrefix 활성화
  });
  const showDetail = query.detail === 'true'; // 쿼리의 파싱 결과값은 문자열입니다.
  return (
    <div>
      <h1>소개</h1>
      <p>이 프로젝트는 리액트 라우터 기초를 실습해보는 예제 프로젝트입니다.</p>
      {showDetail && <p>detail 값을 true 로 설정하셨군요!</p>}
    </div>
  );
};

export default About;

=======================================================

쿼리를 사용할 때는 쿼리 문자열을 객체로 파싱하는 과정에서 결과 값은
언제나 문자열이라는 점에 주의합니다. ?value=1 혹은 ?value=true와 같이
숫자나 논리 자료형(boolean)을 사용한다고 해서 해당 값이 우리가 원하는
형태로 변환되는 것이 아니라, "1", "true"와 같이 문자열 형태로 받아집니다.

그렇기 때문에 숫자를 받아 와야 하면 parseInt 함수를 통해 꼭 숫자로 변환해 주고,
지금처럼 논리 자료형 값을 사용해야 하는 경우에는 정확히 "true" 문자열이랑
일치하는지 비교해 줍니다. 코딩을 완료 했다면, npm start로 리액트를 실행하고,
웹 브라우저 주소란에 http://localhost:3000/about?detail=true 주소를 입력해 주어
Enter를 눌러줍니다. 하단에 "detail 값을 true로 설정하셨군요!" 라는 문구가
보이는지 확인해 봅니다.